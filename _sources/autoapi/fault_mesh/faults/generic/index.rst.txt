fault_mesh.faults.generic
=========================

.. py:module:: fault_mesh.faults.generic

.. autoapi-nested-parse::

   Classes to act as a general/multifault. Leapfrog classes inherit from these.



Classes
-------

.. autoapisummary::

   fault_mesh.faults.generic.GenericMultiFault


Functions
---------

.. autoapisummary::

   fault_mesh.faults.generic.smallest_difference
   fault_mesh.faults.generic.normalize_bearing
   fault_mesh.faults.generic.bearing_leq
   fault_mesh.faults.generic.bearing_geq
   fault_mesh.faults.generic.reverse_bearing
   fault_mesh.faults.generic.reverse_line
   fault_mesh.faults.generic.calculate_strike_direction
   fault_mesh.faults.generic.calculate_dip_direction
   fault_mesh.faults.generic.root_mean_square


Module Contents
---------------

.. py:function:: smallest_difference(value1, value2)

   Finds smallest angle between two bearings
   :param value1:
   :param value2:
   :return:


.. py:function:: normalize_bearing(bearing)

   change a bearing (in degrees) so that it is an azimuth between 0 and 360.
   :param bearing:
   :return:


.. py:function:: bearing_leq(value, benchmark, tolerance = 0.1)

   Check whether a bearing (value) is anticlockwise of another bearing (benchmark)
   :param value:
   :param benchmark:
   :param tolerance: to account for rounding errors etc
   :return:


.. py:function:: bearing_geq(value, benchmark, tolerance = 0.1)

   Check whether a bearing (value) is clockwise of another bearing (benchmark)
   :param value:
   :param benchmark:
   :param tolerance: to account for rounding errors etc
   :return:


.. py:function:: reverse_bearing(bearing)

   180 degrees from supplied bearing
   :param bearing:
   :return:


.. py:function:: reverse_line(line)

   Change the order that points in a LineString object are presented.
   Updated to work with 3d lines (has_z), September 2021
   Important for OpenSHA, I think
   :param line:
   :return:


.. py:function:: calculate_strike_direction(x, y)

   Calculate the strike of line in 2D, given x and y coordinates.
   :param x: x coordinates of line
   :param y: y coordinates of line
   :return: strike direction in degrees


.. py:function:: calculate_dip_direction(line)

   Calculate the strike of a shapely linestring object with coordinates in NZTM,
   then adds 90 to get dip direction. Dip direction is always 90 clockwise from strike of line.
   :param line: Linestring object
   :return:


.. py:function:: root_mean_square(value_array)

   Helper function to turn max and min to stdev for inclusion in XML.
   :param value_array: Differences of values (e.g. sr_min and sr_max) from mean.
   :return:


.. py:class:: GenericMultiFault(fault_geodataframe, sort_sr = False, remove_colons = False, dip_choice = 'pref', check_optional_fields = True)

   Class to hold data for multiple faults, read in from shapefile (and hopefully also tsurfaces)


   .. py:method:: gdf_from_nz_cfm_shp(filename, exclude_region_polygons = None, depth_type = None, exclude_region_min_sr = 1.8, include_names = None, exclude_aus = True, exclude_zero = True)
      :staticmethod:


      Read CFM shapefile



