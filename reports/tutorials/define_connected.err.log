Traceback (most recent call last):
  File "/home/runner/miniconda3/envs/leapfrog-fault-models/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/miniconda3/envs/leapfrog-fault-models/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/miniconda3/envs/leapfrog-fault-models/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/home/runner/miniconda3/envs/leapfrog-fault-models/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/runner/miniconda3/envs/leapfrog-fault-models/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/miniconda3/envs/leapfrog-fault-models/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/miniconda3/envs/leapfrog-fault-models/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Read in fault data from shapefile
fault_data = LeapfrogMultiFault.from_shp("tutorial_gis/central_nz_minimal_data.shp", remove_colons=True, epsg=epsg, trimming_gradient=trimming_gradient,
                                        dip_multiplier=dip_multiplier, strike_multiplier=strike_multiplier)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAssertionError[0m                            Traceback (most recent call last)
Cell [0;32mIn[3], line 2[0m
[1;32m      1[0m [38;5;66;03m# Read in fault data from shapefile[39;00m
[0;32m----> 2[0m fault_data [38;5;241m=[39m [43mLeapfrogMultiFault[49m[38;5;241;43m.[39;49m[43mfrom_shp[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mtutorial_gis/central_nz_minimal_data.shp[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mremove_colons[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mepsg[49m[38;5;241;43m=[39;49m[43mepsg[49m[43m,[49m[43m [49m[43mtrimming_gradient[49m[38;5;241;43m=[39;49m[43mtrimming_gradient[49m[43m,[49m
[1;32m      3[0m [43m                                        [49m[43mdip_multiplier[49m[38;5;241;43m=[39;49m[43mdip_multiplier[49m[43m,[49m[43m [49m[43mstrike_multiplier[49m[38;5;241;43m=[39;49m[43mstrike_multiplier[49m[43m)[49m

File [0;32m~/miniconda3/envs/leapfrog-fault-models/lib/python3.10/site-packages/fault_mesh/faults/leapfrog.py:290[0m, in [0;36mLeapfrogMultiFault.from_shp[0;34m(cls, filename, remove_colons, sort_sr, epsg, dip_choice, trimming_gradient, dip_multiplier, strike_multiplier, check_optional_fields)[0m
[1;32m    286[0m [38;5;129m@classmethod[39m
[1;32m    287[0m [38;5;28;01mdef[39;00m [38;5;21mfrom_shp[39m([38;5;28mcls[39m, filename: [38;5;28mstr[39m, remove_colons: [38;5;28mbool[39m [38;5;241m=[39m [38;5;28;01mFalse[39;00m, sort_sr: [38;5;28mbool[39m [38;5;241m=[39m [38;5;28;01mFalse[39;00m, epsg: [38;5;28mint[39m [38;5;241m=[39m [38;5;28;01mNone[39;00m,
[1;32m    288[0m              dip_choice: [38;5;28mstr[39m [38;5;241m=[39m [38;5;124m"[39m[38;5;124mpref[39m[38;5;124m"[39m, trimming_gradient: [38;5;28mfloat[39m [38;5;241m=[39m [38;5;241m1.[39m,
[1;32m    289[0m              dip_multiplier: [38;5;28mfloat[39m [38;5;241m=[39m [38;5;241m1.[39m, strike_multiplier: [38;5;28mfloat[39m [38;5;241m=[39m [38;5;241m0.5[39m, check_optional_fields: [38;5;28mbool[39m [38;5;241m=[39m [38;5;28;01mFalse[39;00m):
[0;32m--> 290[0m     [38;5;28;01massert[39;00m os[38;5;241m.[39mpath[38;5;241m.[39mexists(filename)
[1;32m    291[0m     trimmed_fault_gdf [38;5;241m=[39m [38;5;28mcls[39m[38;5;241m.[39mgdf_from_nz_cfm_shp(filename[38;5;241m=[39mfilename, exclude_region_polygons[38;5;241m=[39m[38;5;28;01mNone[39;00m, depth_type[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    292[0m                                                 exclude_region_min_sr[38;5;241m=[39m[38;5;241m1.8[39m, include_names[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    293[0m                                                 exclude_aus[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m    294[0m                                                 exclude_zero[38;5;241m=[39m[38;5;28;01mFalse[39;00m, )
[1;32m    295[0m     multi_fault [38;5;241m=[39m [38;5;28mcls[39m(trimmed_fault_gdf, sort_sr[38;5;241m=[39msort_sr, remove_colons[38;5;241m=[39mremove_colons, epsg[38;5;241m=[39mepsg,
[1;32m    296[0m                       dip_choice[38;5;241m=[39mdip_choice, trimming_gradient[38;5;241m=[39mtrimming_gradient,
[1;32m    297[0m                       dip_multiplier[38;5;241m=[39mdip_multiplier, strike_multiplier[38;5;241m=[39mstrike_multiplier,
[1;32m    298[0m                       check_optional_fields[38;5;241m=[39mcheck_optional_fields)

[0;31mAssertionError[0m: 

